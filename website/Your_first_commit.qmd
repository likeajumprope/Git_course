---
title: "Your first commit"
format: html
editor: visual
---

## The Readme.md

We just created a README.md file when initializing your first repository.

The README.md is often **the first item a visitor will see when visiting your repository**. README files typically include information on:

-   The purpose and content of the repository

-   how to contribute to the repository (sometimes separated in a different file called Contributing.md)

The ending .md is an indicator of the Markdown language. Markdown is a lightweight markup language that you can use to add formatting elements to plain text text documents. The documents for this website are also written in Markdown.

Examples of the Markdown language:

## Headlines

The number of `#` determine the level of the headline:

```         
# A first level heading

## A second level heading

### A third level heading
```

# A first level heading

## A second level heading

### A third level heading

## Images

`![Soxi](img/A_cute_cat.jpg)` renders to:

![Soxi](img/A_cute_cat.jpg)

## Web links

This is a link to the `[Github.com Wesbite.](https://github.com/)` renders to:

This is a link to the [Github.com Website.](https://github.com/)

You can learn about the markdown language [here at this official resource](https://www.markdownguide.org/getting-started/) and at this [resource from Github](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).

> Challenge: Your first commit in markdown

## Commits on Github

## What is a commit

The contribution in Git is structured in commits. Commits are small, labeled changes to a file or item in a git repository. A commit can be considered as a snapshot of the state of repository at the time of the commit, to which can be reversed back to (in theory). Commits hence allow to create a *track record of changes of the repository over time*. Git will not allow any changes to documents or files without committing them first.

![Contributions on Github are called commits. Commits are annotated snapshots of files and documents](img/commits.png)

## Committing on Github.com

> Challenge: Add some information to the Readme.md file of your newly created github repository!

1.  Click on your newly created repository.

2.  Click on the pencil icon to activate the editing/writing mode of the Readme.md file.

    ![Click on the pencil button to activate editing mode.](images/Commit1.png)

3.  Add some information about the purpose of the repository.

4.  Click the green *Commit changes* button at the top right.

    ![Add your changes to the repository and click the green commit changes button.](images/Commit2.png)

5.  Write a precise commit message.

    ![Formulate a precise commit message. Commit your changes.](images/Commit3png-01.png)

6.  Commit your changes.

Congratulations! You have made your first commit on Github.com!

# Reviewing your changes.

Congratulations, you have now made your first commit on Github.com!

Let's now have a look at the changes you have made.

> Challenge: Review your first commit.

1.  Go back to the *Code* section of the repository.

![Go back to the code section of the repository.](images/Commit4.png)

2.  The repository should show that changes have been made not long ago. Click the *history* button.

![Click on the history button to show you the history of the repository.](images/Commit5.png)

3.  Click on the Readme.md commit.

![Click on your recent commit.](images/Commit6.png)

4.  Additions to the file will be shown in green (and deletions in red).

![Additions should appear in green.](images/Commit7.png)

> Challenge: Add another line to the readme and delete the first one. Commit your changes with an appropriate commit message. What do the changes look like now?

## Final remarks - committing

Always commit your changes! While changes might be saved by your operating system, git only tracks changes once they are committed.
